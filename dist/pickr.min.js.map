{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/js/utils/utils.js","webpack:///./src/js/utils/color.js","webpack:///./src/js/utils/hsvacolor.js","webpack:///./src/js/libs/moveable.js","webpack:///./src/js/libs/selectable.js","webpack:///./src/js/libs/nanopop.js","webpack:///./src/js/pickr.js","webpack:///./src/js/template.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","eventListener","method","elements","events","fn","options","HTMLCollection","NodeList","Array","from","isArray","el","ev","capture","slice","arguments","on","off","createElementFromString","html","doc","div","createElement","innerHTML","trim","firstElementChild","createFromTemplate","str","removeAttribute","getAttribute","resolve","element","base","con","subtree","child","children","arr","sub","push","keys","length","eventPath","evt","path","composedPath","target","parentElement","resolveElement","val","Element","split","reduce","pv","cv","ci","a","querySelector","shadowRoot","adjustableInputNumbers","mapper","v","handleScroll","e","inc","Number","shiftKey","ctrlKey","deltaY","index","selectionStart","replace","focus","setSelectionRange","preventDefault","dispatchEvent","Event","passive","min","max","floor","round","Math","hsvToRgb","h","f","q","mod","hsvToHsl","rgbToHsv","g","b","minVal","maxVal","delta","dr","dg","db","cmykToHsv","y","k","hslToHsv","isNaN","hexToHsv","hex","match","map","parseInt","parseToHSVA","toLowerCase","ctx","document","getContext","fillStyle","standardizeColor","regex","cmyk","rgba","hsla","hsva","hexa","numarize","array","test","undefined","invalid","type","exec","alphaValid","values","join","raw","substring","HSVaColor","original","next","precision","toFixed","that","toHSVA","toString","toHSLA","toRGBA","toCMYK","rgb","hsvToCmyk","toHEXA","padStart","hsvToHex","alpha","toUpperCase","clone","clamp","Moveable","opt","assign","lock","onchange","onstop","_keyboard","activeElement","wrapper","up","right","down","left","xm","ym","update","cache","x","startsWith","_tapstart","_","_tapstop","_tapmove","getBoundingClientRect","touch","touches","clientX","clientY","width","top","height","style","offsetWidth","offsetHeight","cx","cy","trigger","destroy","Selectable","className","onTap","forEach","classList","Nanopop","reference","padding","vBehaviour","start","middle","end","hBehaviour","bottom","getInfo","pos","cached","position","variant","isVertical","useFallback","rb","eb","positions","vertical","variants","leastApplied","findFittingValue","positionVariants","targetProperty","elSize","winSize","posChar","wantedValue","wantedValueAsString","vaType","vbType","vaValue","vbValue","innerHeight","innerWidth","Pickr","constructor","init","save","hide","show","clear","change","changestop","cancel","swatchselect","this","appClass","theme","useAsButton","disabled","comparison","closeOnScroll","outputPrecision","lockOpacity","autoReposition","container","components","interaction","i18n","swatches","inline","sliders","default","defaultRepresentation","adjustableNumbers","showAlways","closeWithKey","includes","preview","opacity","hue","palette","_preBuild","_buildComponents","_bindEvents","_finalBuild","color","addSwatch","button","app","_root","_nanopop","setAttribute","_t","requestAnimationFrame","cb","setColor","_rePositioningPicker","_representation","setColorRepresentation","_initializingActive","_emit","instance","hidden","input","int","find","add","contains","buildPickr","appendChild","removeChild","parent","nextSibling","insertBefore","remove","parentNode","replaceChild","disable","transition","lastColor","inst","cs","repeat","so","sh","getColor","_color","_lastColor","picker","currentColor","_recalc","_updateOutput","cssRGBaString","background","_swatchColors","slider","backgroundColor","selectable","_components","eventBindings","_clearColor","setHSVA","applyColor","result","stopImmediatePropagation","ck","isOpen","code","some","ranges","step","range","getColorRepresentation","nv","toPrecision","timeout","setTimeout","rs","clearTimeout","_eventBindings","silent","_parseLocalColor","alphaMakesAChange","event","args","_eventListener","I18N_DEFAULTS","callBacks","indexOf","splice","removeSwatch","swatchColor","destroyAndRemove","recalc","string","utype","click","getSelectedColor","getRoot","enable","version"],"mappings":"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","file":"pickr.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Pickr\"] = factory();\n\telse\n\t\troot[\"Pickr\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","/* eslint-disable prefer-rest-params */\nfunction eventListener(method, elements, events, fn, options = {}) {\n\n    // Normalize array\n    if (elements instanceof HTMLCollection || elements instanceof NodeList) {\n        elements = Array.from(elements);\n    } else if (!Array.isArray(elements)) {\n        elements = [elements];\n    }\n\n    if (!Array.isArray(events)) {\n        events = [events];\n    }\n\n    for (const el of elements) {\n        for (const ev of events) {\n            el[method](ev, fn, {capture: false, ...options});\n        }\n    }\n\n    return Array.prototype.slice.call(arguments, 1);\n}\n\n/**\n * Add event(s) to element(s).\n * @param elements DOM-Elements\n * @param events Event names\n * @param fn Callback\n * @param options Optional options\n * @return Array passed arguments\n */\nexport const on = eventListener.bind(null, 'addEventListener');\n\n/**\n * Remove event(s) from element(s).\n * @param elements DOM-Elements\n * @param events Event names\n * @param fn Callback\n * @param options Optional options\n * @return Array passed arguments\n */\nexport const off = eventListener.bind(null, 'removeEventListener');\n\n/**\n * Creates an DOM-Element out of a string (Single element).\n * @param html HTML representing a single element\n * @returns {Element | null} The element.\n */\nexport function createElementFromString(html, doc) {\n    const div = doc.createElement('div');\n    div.innerHTML = html.trim();\n    return div.firstElementChild;\n}\n\n/**\n * Creates a new html element, every element which has\n * a ':ref' attribute will be saved in a object (which will be returned)\n * where the value of ':ref' is the object-key and the value the HTMLElement.\n *\n * It's possible to create a hierarchy if you add a ':obj' attribute. Every\n * sibling will be added to the object which will get the name from the 'data-con' attribute.\n *\n * If you want to create an Array out of multiple elements, you can use the ':arr' attribute,\n * the value defines the key and all elements, which has the same parent and the same 'data-arr' attribute,\n * would be added to it.\n *\n * @param str - The HTML String.\n */\n\nexport function createFromTemplate(str, doc) {\n\n    // Removes an attribute from a HTMLElement and returns the value.\n    const removeAttribute = (el, name) => {\n        const value = el.getAttribute(name);\n        el.removeAttribute(name);\n        return value;\n    };\n\n    // Recursive function to resolve template\n    const resolve = (element, base = {}) => {\n\n        // Check key and container attribute\n        const con = removeAttribute(element, ':obj');\n        const key = removeAttribute(element, ':ref');\n        const subtree = con ? (base[con] = {}) : base;\n\n        // Check and save element\n        key && (base[key] = element);\n        for (const child of Array.from(element.children)) {\n            const arr = removeAttribute(child, ':arr');\n            const sub = resolve(child, arr ? {} : subtree);\n\n            if (arr) {\n\n                // Check if there is already an array and add element\n                (subtree[arr] || (subtree[arr] = []))\n                    .push(Object.keys(sub).length ? sub : child);\n            }\n        }\n\n        return base;\n    };\n\n    return resolve(createElementFromString(str,doc));\n}\n\n/**\n * Polyfill for safari & firefox for the eventPath event property.\n * @param evt The event object.\n * @return [String] event path.\n */\nexport function eventPath(evt,doc) {\n    let path = evt.path || (evt.composedPath && evt.composedPath());\n    if (path) {\n        return path;\n    }\n\n    let el = evt.target.parentElement;\n    path = [evt.target, el];\n    while (el = el.parentElement) {\n        path.push(el);\n    }\n\n    path.push(doc, window);\n    return path;\n}\n\n/**\n * Resolves a HTMLElement by query.\n * @param val\n * @returns {null|Document|Element}\n */\nexport function resolveElement(val, doc) {\n    if (val instanceof Element) {\n        return val;\n    } else if (typeof val === 'string') {\n        return val.split(/>>/g).reduce((pv, cv, ci, a) => {\n            pv = pv.querySelector(cv);\n            return ci < a.length - 1 ? pv.shadowRoot : pv;\n        }, doc);\n    }\n\n    return null;\n}\n\n/**\n * Creates the ability to change numbers in an input field with the scroll-wheel.\n * @param el\n * @param mapper\n */\nexport function adjustableInputNumbers(el, mapper = v => v) {\n\n    function handleScroll(e) {\n        const inc = ([0.001, 0.01, 0.1])[Number(e.shiftKey || e.ctrlKey * 2)] * (e.deltaY < 0 ? 1 : -1);\n\n        let index = 0;\n        let off = el.selectionStart;\n        el.value = el.value.replace(/[\\d.]+/g, (v, i) => {\n\n            // Check if number is in cursor range and increase it\n            if (i <= off && i + v.length >= off) {\n                off = i;\n                return mapper(Number(v), inc, index);\n            }\n\n            index++;\n            return v;\n        });\n\n        el.focus();\n        el.setSelectionRange(off, off);\n\n        // Prevent default and trigger input event\n        e.preventDefault();\n        el.dispatchEvent(new Event('input'));\n    }\n\n    // Bind events\n    on(el, 'focus', () => on(window, 'wheel', handleScroll, {passive: false}));\n    on(el, 'blur', () => off(window, 'wheel', handleScroll));\n}\n","// Shorthands\nconst {min, max, floor, round} = Math;\n\n/**\n * Tries to convert a color name to rgb/a hex representation\n * @param name\n * @returns {string | CanvasGradient | CanvasPattern}\n */\nfunction standardizeColor(name) {\n\n    // Since invalid color's will be parsed as black, filter them out\n    if (name.toLowerCase() === 'black') {\n        return '#000';\n    }\n\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.fillStyle = name;\n    return ctx.fillStyle === '#000' ? null : ctx.fillStyle;\n}\n\n/**\n * Convert HSV spectrum to RGB.\n * @param h Hue\n * @param s Saturation\n * @param v Value\n * @returns {number[]} Array with rgb values.\n */\nexport function hsvToRgb(h, s, v) {\n    h = (h / 360) * 6;\n    s /= 100;\n    v /= 100;\n\n    const i = floor(h);\n\n    const f = h - i;\n    const p = v * (1 - s);\n    const q = v * (1 - f * s);\n    const t = v * (1 - (1 - f) * s);\n\n    const mod = i % 6;\n    const r = [v, q, p, p, t, v][mod];\n    const g = [t, v, v, q, p, p][mod];\n    const b = [p, p, t, v, v, q][mod];\n\n    return [\n        r * 255,\n        g * 255,\n        b * 255\n    ];\n}\n\n/**\n * Convert HSV spectrum to Hex.\n * @param h Hue\n * @param s Saturation\n * @param v Value\n * @returns {string[]} Hex values\n */\nexport function hsvToHex(h, s, v) {\n    return hsvToRgb(h, s, v).map(v =>\n        round(v).toString(16).padStart(2, '0')\n    );\n}\n\n/**\n * Convert HSV spectrum to CMYK.\n * @param h Hue\n * @param s Saturation\n * @param v Value\n * @returns {number[]} CMYK values\n */\nexport function hsvToCmyk(h, s, v) {\n    const rgb = hsvToRgb(h, s, v);\n    const r = rgb[0] / 255;\n    const g = rgb[1] / 255;\n    const b = rgb[2] / 255;\n\n    const k = min(1 - r, 1 - g, 1 - b);\n    const c = k === 1 ? 0 : (1 - r - k) / (1 - k);\n    const m = k === 1 ? 0 : (1 - g - k) / (1 - k);\n    const y = k === 1 ? 0 : (1 - b - k) / (1 - k);\n\n    return [\n        c * 100,\n        m * 100,\n        y * 100,\n        k * 100\n    ];\n}\n\n/**\n * Convert HSV spectrum to HSL.\n * @param h Hue\n * @param s Saturation\n * @param v Value\n * @returns {number[]} HSL values\n */\nexport function hsvToHsl(h, s, v) {\n    s /= 100;\n    v /= 100;\n\n    const l = (2 - s) * v / 2;\n\n    if (l !== 0) {\n        if (l === 1) {\n            s = 0;\n        } else if (l < 0.5) {\n            s = s * v / (l * 2);\n        } else {\n            s = s * v / (2 - l * 2);\n        }\n    }\n\n    return [\n        h,\n        s * 100,\n        l * 100\n    ];\n}\n\n/**\n * Convert RGB to HSV.\n * @param r Red\n * @param g Green\n * @param b Blue\n * @return {number[]} HSV values.\n */\nfunction rgbToHsv(r, g, b) {\n    r /= 255;\n    g /= 255;\n    b /= 255;\n\n    const minVal = min(r, g, b);\n    const maxVal = max(r, g, b);\n    const delta = maxVal - minVal;\n\n    let h, s;\n    const v = maxVal;\n    if (delta === 0) {\n        h = s = 0;\n    } else {\n        s = delta / maxVal;\n        const dr = (((maxVal - r) / 6) + (delta / 2)) / delta;\n        const dg = (((maxVal - g) / 6) + (delta / 2)) / delta;\n        const db = (((maxVal - b) / 6) + (delta / 2)) / delta;\n\n        if (r === maxVal) {\n            h = db - dg;\n        } else if (g === maxVal) {\n            h = (1 / 3) + dr - db;\n        } else if (b === maxVal) {\n            h = (2 / 3) + dg - dr;\n        }\n\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n\n    return [\n        h * 360,\n        s * 100,\n        v * 100\n    ];\n}\n\n/**\n * Convert CMYK to HSV.\n * @param c Cyan\n * @param m Magenta\n * @param y Yellow\n * @param k Key (Black)\n * @return {number[]} HSV values.\n */\nfunction cmykToHsv(c, m, y, k) {\n    c /= 100;\n    m /= 100;\n    y /= 100;\n    k /= 100;\n\n    const r = (1 - min(1, c * (1 - k) + k)) * 255;\n    const g = (1 - min(1, m * (1 - k) + k)) * 255;\n    const b = (1 - min(1, y * (1 - k) + k)) * 255;\n\n    return [...rgbToHsv(r, g, b)];\n}\n\n/**\n * Convert HSL to HSV.\n * @param h Hue\n * @param s Saturation\n * @param l Lightness\n * @return {number[]} HSV values.\n */\nfunction hslToHsv(h, s, l) {\n    s /= 100;\n    l /= 100;\n    s *= l < 0.5 ? l : 1 - l;\n\n    const ns = (2 * s / (l + s)) * 100;\n    const v = (l + s) * 100;\n    return [h, isNaN(ns) ? 0 : ns, v];\n}\n\n/**\n * Convert HEX to HSV.\n * @param hex Hexadecimal string of rgb colors, can have length 3 or 6.\n * @return {number[]} HSV values.\n */\nfunction hexToHsv(hex) {\n    return rgbToHsv(...hex.match(/.{2}/g).map(v => parseInt(v, 16)));\n}\n\n/**\n * Try's to parse a string which represents a color to a HSV array.\n * Current supported types are cmyk, rgba, hsla and hexadecimal.\n * @param str\n * @return {*}\n */\nexport function parseToHSVA(str) {\n\n    // Check if string is a color-name\n    str = str.match(/^[a-zA-Z]+$/) ? standardizeColor(str) : str;\n\n    // Regular expressions to match different types of color represention\n    const regex = {\n        cmyk: /^cmyk[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]+([\\d.]+)/i,\n        rgba: /^((rgba)|rgb)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]*?([\\d.]+|$)/i,\n        hsla: /^((hsla)|hsl)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]*?([\\d.]+|$)/i,\n        hsva: /^((hsva)|hsv)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]*?([\\d.]+|$)/i,\n        hexa: /^#?(([\\dA-Fa-f]{3,4})|([\\dA-Fa-f]{6})|([\\dA-Fa-f]{8}))$/i\n    };\n\n    /**\n     * Takes an Array of any type, convert strings which represents\n     * a number to a number an anything else to undefined.\n     * @param array\n     * @return {*}\n     */\n    const numarize = array => array.map(v => /^(|\\d+)\\.\\d+|\\d+$/.test(v) ? Number(v) : undefined);\n\n    let match;\n    invalid: for (const type in regex) {\n\n        // Check if current scheme passed\n        if (!(match = regex[type].exec(str))) {\n            continue;\n        }\n\n        // Match[2] does only contain a truly value if rgba, hsla, or hsla got matched\n        const alphaValid = a => (!!match[2] === (typeof a === 'number'));\n\n        // Try to convert\n        switch (type) {\n            case 'cmyk': {\n                const [, c, m, y, k] = numarize(match);\n\n                if (c > 100 || m > 100 || y > 100 || k > 100) {\n                    break invalid;\n                }\n\n                return {values: cmykToHsv(c, m, y, k), type};\n            }\n            case 'rgba': {\n                const [, , , r, g, b, a] = numarize(match);\n\n                if (r > 255 || g > 255 || b > 255 || a < 0 || a > 1 || !alphaValid(a)) {\n                    break invalid;\n                }\n\n                return {values: [...rgbToHsv(r, g, b), a], a, type};\n            }\n            case 'hexa': {\n                let [, hex] = match;\n\n                if (hex.length === 4 || hex.length === 3) {\n                    hex = hex.split('').map(v => v + v).join('');\n                }\n\n                const raw = hex.substring(0, 6);\n                let a = hex.substring(6);\n\n                // Convert 0 - 255 to 0 - 1 for opacity\n                a = a ? (parseInt(a, 16) / 255) : undefined;\n\n                return {values: [...hexToHsv(raw), a], a, type};\n            }\n            case 'hsla': {\n                const [, , , h, s, l, a] = numarize(match);\n\n                if (h > 360 || s > 100 || l > 100 || a < 0 || a > 1 || !alphaValid(a)) {\n                    break invalid;\n                }\n\n                return {values: [...hslToHsv(h, s, l), a], a, type};\n            }\n            case 'hsva': {\n                const [, , , h, s, v, a] = numarize(match);\n\n                if (h > 360 || s > 100 || v > 100 || a < 0 || a > 1 || !alphaValid(a)) {\n                    break invalid;\n                }\n\n                return {values: [h, s, v, a], a, type};\n            }\n        }\n    }\n\n    return {values: null, type: null};\n}\n","import {hsvToCmyk, hsvToHex, hsvToHsl, hsvToRgb} from './color';\n\n/**\n * Simple class which holds the properties\n * of the color represention model hsla (hue saturation lightness alpha)\n */\nexport function HSVaColor(h = 0, s = 0, v = 0, a = 1) {\n    const mapper = (original, next) => (precision = -1) => {\n        return next(~precision ? original.map(v => Number(v.toFixed(precision))) : original);\n    };\n\n    const that = {\n        h, s, v, a,\n\n        toHSVA() {\n            const hsva = [that.h, that.s, that.v, that.a];\n            hsva.toString = mapper(hsva, arr => `hsva(${arr[0]}, ${arr[1]}%, ${arr[2]}%, ${that.a})`);\n            return hsva;\n        },\n\n        toHSLA() {\n            const hsla = [...hsvToHsl(that.h, that.s, that.v), that.a];\n            hsla.toString = mapper(hsla, arr => `hsla(${arr[0]}, ${arr[1]}%, ${arr[2]}%, ${that.a})`);\n            return hsla;\n        },\n\n        toRGBA() {\n            const rgba = [...hsvToRgb(that.h, that.s, that.v), that.a];\n            rgba.toString = mapper(rgba, arr => `rgba(${arr[0]}, ${arr[1]}, ${arr[2]}, ${that.a})`);\n            return rgba;\n        },\n\n        toCMYK() {\n            const cmyk = hsvToCmyk(that.h, that.s, that.v);\n            cmyk.toString = mapper(cmyk, arr => `cmyk(${arr[0]}%, ${arr[1]}%, ${arr[2]}%, ${arr[3]}%)`);\n            return cmyk;\n        },\n\n        toHEXA() {\n            const hex = hsvToHex(that.h, that.s, that.v);\n\n            // Check if alpha channel make sense, convert it to 255 number space, convert\n            // To hex and pad it with zeros if needet.\n            const alpha = that.a >= 1 ? '' : Number((that.a * 255).toFixed(0))\n                .toString(16)\n                .toUpperCase().padStart(2, '0');\n\n            alpha && hex.push(alpha);\n            hex.toString = () => `#${hex.join('').toUpperCase()}`;\n            return hex;\n        },\n\n        clone: () => HSVaColor(that.h, that.s, that.v, that.a)\n    };\n\n    return that;\n}\n","import * as _ from '../utils/utils';\n\nconst clamp = v => Math.max(Math.min(v, 1), 0);\nexport default function Moveable(opt) {\n\n    const that = {\n\n        // Assign default values\n        options: Object.assign({\n            lock: null,\n            onchange: () => 0,\n            onstop: () => 0,\n            document\n        }, opt),\n\n        _keyboard(e) {\n            const {options} = that;\n            const {type, key} = e;\n\n            // Check to see if the Movable is focused and then move it based on arrow key inputs\n            // For improved accessibility\n            if (that.options.document.activeElement === options.wrapper) {\n                const {lock} = that.options;\n                const up = key === 'ArrowUp';\n                const right = key === 'ArrowRight';\n                const down = key === 'ArrowDown';\n                const left = key === 'ArrowLeft';\n\n                if (type === 'keydown' && (up || right || down || left)) {\n                    let xm = 0;\n                    let ym = 0;\n\n                    if (lock === 'v') {\n                        xm = (up || right) ? 1 : -1;\n                    } else if (lock === 'h') {\n                        xm = (up || right) ? -1 : 1;\n                    } else {\n                        ym = up ? -1 : (down ? 1 : 0);\n                        xm = left ? -1 : (right ? 1 : 0);\n                    }\n\n                    that.update(\n                        clamp(that.cache.x + (0.01 * xm)),\n                        clamp(that.cache.y + (0.01 * ym))\n                    );\n                    e.preventDefault();\n                } else if (key.startsWith('Arrow')) {\n                    that.options.onstop();\n                    e.preventDefault();\n                }\n            }\n        },\n\n        _tapstart(evt) {\n            _.on(that.options.document, ['mouseup', 'touchend', 'touchcancel'], that._tapstop);\n            _.on(that.options.document, ['mousemove', 'touchmove'], that._tapmove);\n\n            // Prevent default touch event\n            evt.preventDefault();\n\n            // Trigger\n            that._tapmove(evt);\n        },\n\n        _tapmove(evt) {\n            const {options, cache} = that;\n            const {lock, element, wrapper} = options;\n            const b = wrapper.getBoundingClientRect();\n\n            let x = 0, y = 0;\n            if (evt) {\n                const touch = evt && evt.touches && evt.touches[0];\n                x = evt ? (touch || evt).clientX : 0;\n                y = evt ? (touch || evt).clientY : 0;\n\n                // Reset to bounds\n                if (x < b.left) {\n                    x = b.left;\n                } else if (x > b.left + b.width) {\n                    x = b.left + b.width;\n                }\n                if (y < b.top) {\n                    y = b.top;\n                } else if (y > b.top + b.height) {\n                    y = b.top + b.height;\n                }\n\n                // Normalize\n                x -= b.left;\n                y -= b.top;\n            } else if (cache) {\n                x = cache.x * b.width;\n                y = cache.y * b.height;\n            }\n\n            if (lock !== 'h') {\n                element.style.left = `calc(${x / b.width * 100}% - ${element.offsetWidth / 2}px)`;\n            }\n\n            if (lock !== 'v') {\n                element.style.top = `calc(${y / b.height * 100}% - ${element.offsetHeight / 2}px)`;\n            }\n\n            that.cache = {x: x / b.width, y: y / b.height};\n            const cx = clamp(x / b.width);\n            const cy = clamp(y / b.height);\n\n            switch (lock) {\n                case 'v':\n                    return options.onchange(cx);\n                case 'h':\n                    return options.onchange(cy);\n                default:\n                    return options.onchange(cx, cy);\n            }\n        },\n\n        _tapstop() {\n            that.options.onstop();\n            _.off(that.options.document, ['mouseup', 'touchend', 'touchcancel'], that._tapstop);\n            _.off(that.options.document, ['mousemove', 'touchmove'], that._tapmove);\n        },\n\n        trigger() {\n            that._tapmove();\n        },\n\n        update(x = 0, y = 0) {\n            const {left, top, width, height} = that.options.wrapper.getBoundingClientRect();\n\n            if (that.options.lock === 'h') {\n                y = x;\n            }\n\n            that._tapmove({\n                clientX: left + width * x,\n                clientY: top + height * y\n            });\n        },\n\n        destroy() {\n            const {options, _tapstart, _keyboard} = that;\n            _.off(that.options.document, ['keydown', 'keyup'], _keyboard);\n            _.off([options.wrapper, options.element], 'mousedown', _tapstart);\n            _.off([options.wrapper, options.element], 'touchstart', _tapstart, {\n                passive: false\n            });\n        }\n    };\n\n    // Initilize\n    const {options, _tapstart, _keyboard} = that;\n    _.on([options.wrapper, options.element], 'mousedown', _tapstart);\n    _.on([options.wrapper, options.element], 'touchstart', _tapstart, {\n        passive: false\n    });\n\n    _.on(that.options.document, ['keydown', 'keyup'], _keyboard);\n\n    return that;\n}\n","import * as _ from '../utils/utils';\n\nexport default function Selectable(opt = {}) {\n    opt = Object.assign({\n        onchange: () => 0,\n        className: '',\n        elements: []\n    }, opt);\n\n    const onTap = _.on(opt.elements, 'click', evt => {\n        opt.elements.forEach(e =>\n            e.classList[evt.target === e ? 'add' : 'remove'](opt.className)\n        );\n\n        opt.onchange(evt);\n    });\n\n    return {\n        destroy: () => _.off(...onTap)\n    };\n}\n","/**\n * Micro positioning-engine\n * @param el\n * @param reference\n * @param pos\n * @param padding\n * @returns {{update(): void}}\n * @constructor\n */\nexport default function Nanopop({el, reference, padding = 8}) {\n\n    // Positioning priorities for variants\n    const vBehaviour = {\n        start: 'sme',\n        middle: 'mse',\n        end: 'ems'\n    };\n\n    // Positioning priorities for general alignment\n    const hBehaviour = {\n        top: 'tbrl',\n        right: 'rltb',\n        bottom: 'btrl',\n        left: 'lrbt'\n    };\n\n    const getInfo = ((cache = {}) => (pos, cached = cache[pos]) => {\n\n        // Return cached value if possible\n        if (cached) {\n            return cached;\n        }\n\n        // Extract position and variant\n        // Top-start -> top is \"position\" and \"start\" is the variant\n        const [position, variant = 'middle'] = pos.split('-');\n\n        // It's vertical if top or bottom is used as position\n        const isVertical = (position === 'top' || position === 'bottom');\n\n        // Cache value and return\n        return cache[pos] = {\n            position,\n            variant,\n            isVertical\n        };\n    })();\n\n    return {\n\n        /**\n         * Re-aligns the element\n         * @param pos Position string\n         * @param useFallback If everything fails the element may be centered on the the entire screen ignoring the reference\n         */\n        update(pos, useFallback = false) {\n            const {position, variant, isVertical} = getInfo(pos);\n            const rb = reference.getBoundingClientRect();\n            const eb = el.getBoundingClientRect();\n\n            /**\n             * Holds coordinates of top, left, bottom and right alignment\n             */\n            const positions = vertical => vertical ? {\n                t: rb.top - eb.height - padding,\n                b: rb.bottom + padding\n            } : {\n                r: rb.right + padding,\n                l: rb.left - eb.width - padding\n            };\n\n            /**\n             * Holds corresponding variants (start, middle, end)\n             */\n            const variants = vertical => vertical ? {\n                s: rb.left + rb.width - eb.width,\n                m: (-eb.width / 2) + (rb.left + rb.width / 2),\n                e: rb.left\n            } : {\n                s: rb.bottom - eb.height,\n                m: rb.bottom - rb.height / 2 - eb.height / 2,\n                e: rb.bottom - rb.height\n            };\n\n            // Holds the last working positions\n            const leastApplied = {};\n\n            /**\n             * Applies a position, example precedure with top-start: it'll\n             * first try to satify the variant \"start\", if this fails it'll try\n             * the remaining variants (in this case \"middle\" and \"end\")\n             * @param positions Array of positions in the order they should be applied\n             * @param positionVariants Variants, the first should be the one initially wanted\n             * @param targetProperty The target property, defines if this is a horizontal or vertical aligment\n             * @returns a value for targetProperty or null if none fits\n             */\n            const findFittingValue = (positions, positionVariants, targetProperty) => {\n                const vertical = targetProperty === 'top';\n                const elSize = vertical ? eb.height : eb.width;\n                const winSize = window[vertical ? 'innerHeight' : 'innerWidth'];\n\n                for (const posChar of positions) {\n                    const wantedValue = positionVariants[posChar];\n                    const wantedValueAsString = leastApplied[targetProperty] = `${wantedValue}px`;\n\n                    if (wantedValue > 0 && (wantedValue + elSize) < winSize) {\n                        return wantedValueAsString;\n                    }\n                }\n\n                return null;\n            };\n\n\n            for (const vertical of [isVertical, !isVertical]) {\n\n                /**\n                 * Va and vb both define where the element is positioned (top, bottom, left, right)\n                 * and it's corresponding variant (start, middle, end). Since we're \"rotating\" the element\n                 * to ensure to (hopefully) find at least one fitting position the values need to be\n                 * defined during runtime.\n                 */\n                const vaType = vertical ? 'top' : 'left';\n                const vbType = vertical ? 'left' : 'top';\n\n                // Actual values for top and bottom\n                const vaValue = findFittingValue(hBehaviour[position], positions(vertical), vaType);\n                const vbValue = findFittingValue(vBehaviour[variant], variants(vertical), vbType);\n\n                // Both values work, apply them\n                if (vaValue && vbValue) {\n                    el.style[vbType] = vbValue;\n                    el.style[vaType] = vaValue;\n                    return;\n                }\n            }\n\n            // It failed to find a non-clipping position, if fallback is enable it'll use it - otherwise the last\n            // Calculated values will be used.\n            if (useFallback) {\n                el.style.top = `${(window.innerHeight - eb.height) / 2}px`;\n                el.style.left = `${(window.innerWidth - eb.width) / 2}px`;\n            } else {\n                el.style.left = leastApplied.left;\n                el.style.top = leastApplied.top;\n            }\n        }\n    };\n}\n","import * as _        from './utils/utils';\nimport {version}     from '../../package';\nimport {parseToHSVA} from './utils/color';\nimport {HSVaColor}   from './utils/hsvacolor';\nimport Moveable      from './libs/moveable';\nimport Selectable    from './libs/selectable';\nimport Nanopop       from './libs/nanopop';\nimport buildPickr    from './template';\n\nclass Pickr {\n\n    // Expose pickr utils\n    static utils = _;\n\n    // Expose libraries for easier integration in things build on top of it\n    static libs = {\n        HSVaColor,\n        Moveable,\n        Nanopop,\n        Selectable\n    };\n\n    // Assign version and export\n    static version = version;\n\n    // Default strings\n    static I18N_DEFAULTS = {\n\n        // Strings visible in the UI\n        'ui:dialog': 'color picker dialog',\n        'btn:toggle': 'toggle color picker dialog',\n        'btn:swatch': 'color swatch',\n        'btn:last-color': 'use previous color',\n        'btn:save': 'Save',\n        'btn:cancel': 'Cancel',\n        'btn:clear': 'Clear',\n\n        // Strings used for aria-labels\n        'aria:btn:save': 'save and close',\n        'aria:btn:cancel': 'cancel and close',\n        'aria:btn:clear': 'clear and close',\n        'aria:input': 'color input field',\n        'aria:palette': 'color selection area',\n        'aria:hue': 'hue selection slider',\n        'aria:opacity': 'selection slider'\n    };\n\n    // Will be used to prevent specific actions during initilization\n    _initializingActive = true;\n\n    // If the current color value should be recalculated\n    _recalc = true;\n\n    // Positioning engine and DOM-Tree\n    _nanopop = null;\n    _root = null;\n\n    // Current and last color for comparison\n    _color = HSVaColor();\n    _lastColor = HSVaColor();\n    _swatchColors = [];\n\n    // Evenlistener name: [callbacks]\n    _eventListener = {\n        init: [],\n        save: [],\n        hide: [],\n        show: [],\n        clear: [],\n        change: [],\n        changestop: [],\n        cancel: [],\n        swatchselect: []\n    };\n\n    constructor(opt) {\n\n        // Assign default values\n        this.options = opt = Object.assign({\n            appClass: null,\n            theme: 'classic',\n            useAsButton: false,\n            padding: 8,\n            disabled: false,\n            comparison: true,\n            closeOnScroll: false,\n            outputPrecision: 0,\n            lockOpacity: false,\n            autoReposition: true,\n            container: 'body',\n            document,\n\n            components: {\n                interaction: {}\n            },\n\n            i18n: {},\n            swatches: null,\n            inline: false,\n            sliders: null,\n\n            default: '#42445a',\n            defaultRepresentation: null,\n            position: 'bottom-middle',\n            adjustableNumbers: true,\n            showAlways: false,\n\n            closeWithKey: 'Escape'\n        }, opt);\n\n        const {swatches, components, theme, sliders, lockOpacity, padding} = opt;\n\n        if (['nano', 'monolith'].includes(theme) && !sliders) {\n            opt.sliders = 'h';\n        }\n\n        // Check interaction section\n        if (!components.interaction) {\n            components.interaction = {};\n        }\n\n        // Overwrite palette if preview, opacity or hue are true\n        const {preview, opacity, hue, palette} = components;\n        components.opacity = (!lockOpacity && opacity);\n        components.palette = palette || preview || opacity || hue;\n\n        // Initialize picker\n        this._preBuild();\n        this._buildComponents();\n        this._bindEvents();\n        this._finalBuild();\n\n        // Append pre-defined swatch colors\n        if (swatches && swatches.length) {\n            swatches.forEach(color => this.addSwatch(color));\n        }\n\n        // Initialize positioning engine\n        const {button, app} = this._root;\n        this._nanopop = Nanopop({\n            reference: button,\n            padding,\n            el: app\n        });\n\n        // Initialize accessibility\n        button.setAttribute('role', 'button');\n        button.setAttribute('aria-label', this._t('btn:toggle'));\n\n        // Initilization is finish, pickr is visible and ready for usage\n        const that = this;\n        requestAnimationFrame((function cb() {\n\n            if (!app.offsetWidth && app.parentElement !== opt.container) {\n                return requestAnimationFrame(cb);\n            }\n\n            // Apply default color\n            that.setColor(opt.default);\n            that._rePositioningPicker();\n\n            // Initialize color representation\n            if (opt.defaultRepresentation) {\n                that._representation = opt.defaultRepresentation;\n                that.setColorRepresentation(that._representation);\n            }\n\n            // Show pickr if locked\n            if (opt.showAlways) {\n                that.show();\n            }\n\n            // Initialization is done - pickr is usable, fire init event\n            that._initializingActive = false;\n            that._emit('init');\n        }));\n    }\n\n    // Create instance via method\n    static create = options => new Pickr(options);\n\n    // Does only the absolutly basic thing to initialize the components\n    _preBuild() {\n        const {options} = this;\n\n        // Resolve elements\n        for (const type of ['el', 'container']) {\n            options[type] = _.resolveElement(options[type],options.document);\n        }\n\n        // Create element and append it to body to\n        // Prevent initialization errors\n        this._root = buildPickr(this);\n\n        // Check if a custom button is used\n        if (options.useAsButton) {\n            this._root.button = options.el; // Replace button with customized button\n        }\n\n        options.container.appendChild(this._root.root);\n    }\n\n    _finalBuild() {\n        const opt = this.options;\n        const root = this._root;\n\n        // Remove from body\n        opt.container.removeChild(root.root);\n\n        if (opt.inline) {\n            const parent = opt.el.parentElement;\n\n            if (opt.el.nextSibling) {\n                parent.insertBefore(root.app, opt.el.nextSibling);\n            } else {\n                parent.appendChild(root.app);\n            }\n        } else {\n            opt.container.appendChild(root.app);\n        }\n\n        // Don't replace the the element if a custom button is used\n        if (!opt.useAsButton) {\n\n            // Replace element with actual color-picker\n            opt.el.parentNode.replaceChild(root.root, opt.el);\n        } else if (opt.inline) {\n            opt.el.remove();\n        }\n\n        // Check if it should be immediatly disabled\n        if (opt.disabled) {\n            this.disable();\n        }\n\n        // Check if color comparison is disabled, if yes - remove transitions so everything keeps smoothly\n        if (!opt.comparison) {\n            root.button.style.transition = 'none';\n\n            if (!opt.useAsButton) {\n                root.preview.lastColor.style.transition = 'none';\n            }\n        }\n\n        this.hide();\n    }\n\n    _buildComponents() {\n\n        // Instance reference\n        const inst = this;\n        const cs = this.options.components;\n        const sliders = (inst.options.sliders || 'v').repeat(2);\n        const [so, sh] = sliders.match(/^[vh]+$/g) ? sliders : [];\n\n        // Re-assign if null\n        const getColor = () =>\n            this._color || (this._color = this._lastColor.clone());\n\n        const components = {\n\n            palette: Moveable({\n                element: inst._root.palette.picker,\n                wrapper: inst._root.palette.palette,\n                document: this.options.document,\n                onstop: () => inst._emit('changestop', inst),\n                onchange(x, y) {\n                    if (!cs.palette) {\n                        return;\n                    }\n\n                    const color = getColor();\n                    const {_root, options} = inst;\n                    const {lastColor, currentColor} = _root.preview;\n\n                    // Update the input field only if the user is currently not typing\n                    if (inst._recalc) {\n\n                        // Calculate saturation based on the position\n                        color.s = x * 100;\n\n                        // Calculate the value\n                        color.v = 100 - y * 100;\n\n                        // Prevent falling under zero\n                        color.v < 0 ? color.v = 0 : 0;\n                        inst._updateOutput();\n                    }\n\n                    // Set picker and gradient color\n                    const cssRGBaString = color.toRGBA().toString(0);\n                    this.element.style.background = cssRGBaString;\n                    this.wrapper.style.background = `\n                        linear-gradient(to top, rgba(0, 0, 0, ${color.a}), transparent),\n                        linear-gradient(to left, hsla(${color.h}, 100%, 50%, ${color.a}), rgba(255, 255, 255, ${color.a}))\n                    `;\n\n                    // Check if color is locked\n                    if (!options.comparison) {\n                        _root.button.style.color = cssRGBaString;\n\n                        // If the user changes the color, remove the cleared icon\n                        _root.button.classList.remove('clear');\n                    } else if (!options.useAsButton && !inst._lastColor) {\n\n                        // Apply color to both the last and current color since the current state is cleared\n                        lastColor.style.color = cssRGBaString;\n                    }\n\n                    // Check if there's a swatch which color matches the current one\n                    const hexa = color.toHEXA().toString();\n                    for (const {el, color} of inst._swatchColors) {\n                        el.classList[hexa === color.toHEXA().toString() ? 'add' : 'remove']('pcr-active');\n                    }\n\n                    // Change current color\n                    currentColor.style.color = cssRGBaString;\n                }\n            }),\n\n            hue: Moveable({\n                lock: sh === 'v' ? 'h' : 'v',\n                element: inst._root.hue.picker,\n                wrapper: inst._root.hue.slider,\n                document: this.options.document,\n\n                onstop: () => inst._emit('changestop', inst),\n                onchange(v) {\n                    if (!cs.hue || !cs.palette) {\n                        return;\n                    }\n\n                    const color = getColor();\n\n                    // Calculate hue\n                    if (inst._recalc) {\n                        color.h = v * 360;\n                    }\n\n                    // Update color\n                    this.element.style.backgroundColor = `hsl(${color.h}, 100%, 50%)`;\n                    components.palette.trigger();\n                }\n            }),\n\n            opacity: Moveable({\n                lock: so === 'v' ? 'h' : 'v',\n                element: inst._root.opacity.picker,\n                wrapper: inst._root.opacity.slider,\n                document: this.options.document,\n\n                onstop: () => inst._emit('changestop', inst),\n                onchange(v) {\n                    if (!cs.opacity || !cs.palette) {\n                        return;\n                    }\n\n                    const color = getColor();\n\n                    // Calculate opacity\n                    if (inst._recalc) {\n                        color.a = Math.round(v * 1e2) / 100;\n                    }\n\n                    // Update color\n                    this.element.style.background = `rgba(0, 0, 0, ${color.a})`;\n                    components.palette.trigger();\n                }\n            }),\n\n            selectable: Selectable({\n                elements: inst._root.interaction.options,\n                className: 'active',\n\n                onchange(e) {\n                    inst._representation = e.target.getAttribute('data-type').toUpperCase();\n                    inst._recalc && inst._updateOutput();\n                }\n            })\n        };\n\n        this._components = components;\n    }\n\n    _bindEvents() {\n        const {_root, options} = this;\n\n        const eventBindings = [\n\n            // Clear color\n            _.on(_root.interaction.clear, 'click', () => this._clearColor()),\n\n            // Select last color on click\n            _.on([\n                _root.interaction.cancel,\n                _root.preview.lastColor\n            ], 'click', () => {\n                this._emit('cancel', this);\n                this.setHSVA(...(this._lastColor || this._color).toHSVA(), true);\n            }),\n\n            // Save color\n            _.on(_root.interaction.save, 'click', () => {\n                !this.applyColor() && !options.showAlways && this.hide();\n            }),\n\n            // User input\n            _.on(_root.interaction.result, ['keyup', 'input'], e => {\n\n                // Fire listener if initialization is finish and changed color was valid\n                if (this.setColor(e.target.value, true) && !this._initializingActive) {\n                    this._emit('change', this._color);\n                }\n\n                e.stopImmediatePropagation();\n            }),\n\n            // Detect user input and disable auto-recalculation\n            _.on(_root.interaction.result, ['focus', 'blur'], e => {\n                this._recalc = e.type === 'blur';\n                this._recalc && this._updateOutput();\n            }),\n\n            // Cancel input detection on color change\n            _.on([\n                _root.palette.palette,\n                _root.palette.picker,\n                _root.hue.slider,\n                _root.hue.picker,\n                _root.opacity.slider,\n                _root.opacity.picker\n            ], ['mousedown', 'touchstart'], () => this._recalc = true)\n        ];\n\n        // Provide hiding / showing abilities only if showAlways is false\n        if (!options.showAlways) {\n            const ck = options.closeWithKey;\n\n            eventBindings.push(\n                // Save and hide / show picker\n                _.on(_root.button, 'click', () => this.isOpen() ? this.hide() : this.show()),\n\n                // Close with escape key\n                _.on(this.options.document, 'keyup', e => this.isOpen() && (e.key === ck || e.code === ck) && this.hide()),\n\n                // Cancel selecting if the user taps behind the color picker\n                _.on(this.options.document, ['touchstart', 'mousedown'], e => {\n                    if (this.isOpen() && !_.eventPath(e, this.options.document).some(el => el === _root.app || el === _root.button)) {\n                        this.hide();\n                    }\n                }, {capture: true})\n            );\n        }\n\n        // Make input adjustable if enabled\n        if (options.adjustableNumbers) {\n            const ranges = {\n                rgba: [255, 255, 255, 1],\n                hsva: [360, 100, 100, 1],\n                hsla: [360, 100, 100, 1],\n                cmyk: [100, 100, 100, 100]\n            };\n\n            _.adjustableInputNumbers(_root.interaction.result, (o, step, index) => {\n                const range = ranges[this.getColorRepresentation().toLowerCase()];\n\n                if (range) {\n                    const max = range[index];\n\n                    // Calculate next reasonable number\n                    const nv = o + (max >= 100 ? step * 1000 : step);\n\n                    // Apply range of zero up to max, fix floating-point issues\n                    return nv <= 0 ? 0 : Number((nv < max ? nv : max).toPrecision(3));\n                }\n\n                return o;\n            });\n        }\n\n        if (options.autoReposition && !options.inline) {\n            let timeout = null;\n            const that = this;\n\n            // Re-calc position on window resize, scroll and wheel\n            eventBindings.push(\n                _.on(window, ['scroll', 'resize'], () => {\n                    if (that.isOpen()) {\n\n                        if (options.closeOnScroll) {\n                            that.hide();\n                        }\n\n                        if (timeout === null) {\n                            timeout = setTimeout(() => timeout = null, 100);\n\n                            // Update position on every frame\n                            requestAnimationFrame(function rs() {\n                                that._rePositioningPicker();\n                                (timeout !== null) && requestAnimationFrame(rs);\n                            });\n                        } else {\n                            clearTimeout(timeout);\n                            timeout = setTimeout(() => timeout = null, 100);\n                        }\n                    }\n                }, {capture: true})\n            );\n        }\n\n        // Save bindings\n        this._eventBindings = eventBindings;\n    }\n\n    _rePositioningPicker() {\n        const {options} = this;\n\n        // No repositioning needed if inline\n        if (!options.inline) {\n            this._nanopop.update(options.position, !this._recalc);\n        }\n    }\n\n    _updateOutput() {\n        const {_root, _color, options} = this;\n\n        // Check if component is present\n        if (_root.interaction.type()) {\n\n            // Construct function name and call if present\n            const method = `to${_root.interaction.type().getAttribute('data-type')}`;\n            _root.interaction.result.value = typeof _color[method] === 'function' ?\n                _color[method]().toString(options.outputPrecision) : '';\n        }\n\n        // Fire listener if initialization is finish\n        if (!this._initializingActive && this._recalc) {\n            this._emit('change', _color);\n        }\n    }\n\n    _clearColor(silent = false) {\n        const {_root, options} = this;\n\n        // Change only the button color if it isn't customized\n        if (!options.useAsButton) {\n            _root.button.style.color = 'rgba(0, 0, 0, 0.15)';\n        }\n\n        _root.button.classList.add('clear');\n\n        if (!options.showAlways) {\n            this.hide();\n        }\n\n        this._lastColor = null;\n        if (!this._initializingActive && !silent) {\n\n            // Fire listener\n            this._emit('save', null);\n            this._emit('clear', this);\n        }\n    }\n\n    _parseLocalColor(str) {\n        const {values, type, a} = parseToHSVA(str);\n        const {lockOpacity} = this.options;\n        const alphaMakesAChange = a !== undefined && a !== 1;\n\n        // If no opacity is applied, add undefined at the very end which gets\n        // Set to 1 in setHSVA\n        if (values && values.length === 3) {\n            values[3] = undefined;\n        }\n\n        return {\n            values: (!values || (lockOpacity && alphaMakesAChange)) ? null : values,\n            type\n        };\n    }\n\n    _emit(event, ...args) {\n        this._eventListener[event].forEach(cb => cb(...args, this));\n    }\n\n    _t(key) {\n        return this.options.i18n[key] || Pickr.I18N_DEFAULTS[key];\n    }\n\n    on(event, cb) {\n\n        // Validate\n        if (typeof cb === 'function' && typeof event === 'string' && event in this._eventListener) {\n            this._eventListener[event].push(cb);\n        }\n\n        return this;\n    }\n\n    off(event, cb) {\n        const callBacks = this._eventListener[event];\n\n        if (callBacks) {\n            const index = callBacks.indexOf(cb);\n\n            if (~index) {\n                callBacks.splice(index, 1);\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * Appends a color to the swatch palette\n     * @param color\n     * @returns {boolean}\n     */\n    addSwatch(color) {\n        const {values} = this._parseLocalColor(color);\n\n        if (values) {\n            const {_swatchColors, _root} = this;\n            const color = HSVaColor(...values);\n\n            // Create new swatch HTMLElement\n            const el = _.createElementFromString(\n                `<button type=\"button\" style=\"color: ${color.toRGBA().toString(0)}\" aria-label=\"${this._t('btn:swatch')}\"/>`,\n                this.options.document\n            );\n\n            // Append element and save swatch data\n            _root.swatches.appendChild(el);\n            _swatchColors.push({el, color});\n\n            // Bind event\n            this._eventBindings.push(\n                _.on(el, 'click', () => {\n                    this.setHSVA(...color.toHSVA(), true);\n                    this._emit('swatchselect', color);\n                    this._emit('change', color);\n                })\n            );\n\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Removes a swatch color by it's index\n     * @param index\n     * @returns {boolean}\n     */\n    removeSwatch(index) {\n        const swatchColor = this._swatchColors[index];\n\n        // Check swatch data\n        if (swatchColor) {\n            const {el} = swatchColor;\n\n            // Remove HTML child and swatch data\n            this._root.swatches.removeChild(el);\n            this._swatchColors.splice(index, 1);\n            return true;\n        }\n\n        return false;\n    }\n\n    applyColor(silent = false) {\n        const {preview, button} = this._root;\n\n        // Change preview and current color\n        const cssRGBaString = this._color.toRGBA().toString(0);\n        preview.lastColor.style.color = cssRGBaString;\n\n        // Change only the button color if it isn't customized\n        if (!this.options.useAsButton) {\n            button.style.color = cssRGBaString;\n        }\n\n        // User changed the color so remove the clear clas\n        button.classList.remove('clear');\n\n        // Save last color\n        this._lastColor = this._color.clone();\n\n        // Fire listener\n        if (!this._initializingActive && !silent) {\n            this._emit('save', this._color);\n        }\n\n        return this;\n    }\n\n    /**\n     * Destroy's all functionalitys\n     */\n    destroy() {\n        this._eventBindings.forEach(args => _.off(...args));\n\n        Object.keys(this._components)\n            .forEach(key => this._components[key].destroy());\n    }\n\n    /**\n     * Destroy's all functionalitys and removes\n     * the pickr element.\n     */\n    destroyAndRemove() {\n        this.destroy();\n        const {root, app} = this._root;\n\n        // Remove element\n        if (root.parentElement) {\n            root.parentElement.removeChild(root);\n        }\n\n        // Remove .pcr-app\n        app.parentElement.removeChild(app);\n\n        // There are references to various DOM elements stored in the pickr instance\n        // This cleans all of them to avoid detached DOMs\n        Object.keys(this)\n            .forEach(key => this[key] = null);\n    }\n\n    /**\n     * Hides the color-picker ui.\n     */\n    hide() {\n        this._root.app.classList.remove('visible');\n        this._emit('hide', this);\n        return this;\n    }\n\n    /**\n     * Shows the color-picker ui.\n     */\n    show() {\n\n        if (!this.options.disabled) {\n            this._root.app.classList.add('visible');\n            this._rePositioningPicker();\n            this._emit('show', this);\n        }\n\n        return this;\n    }\n\n    /**\n     * @return {boolean} If the color picker is currently open\n     */\n    isOpen() {\n        return this._root.app.classList.contains('visible');\n    }\n\n    /**\n     * Set a specific color.\n     * @param h Hue\n     * @param s Saturation\n     * @param v Value\n     * @param a Alpha channel (0 - 1)\n     * @param silent If the button should not change the color\n     * @return boolean if the color has been accepted\n     */\n    setHSVA(h = 360, s = 0, v = 0, a = 1, silent = false) {\n\n        // Deactivate color calculation\n        const recalc = this._recalc; // Save state\n        this._recalc = false;\n\n        // Validate input\n        if (h < 0 || h > 360 || s < 0 || s > 100 || v < 0 || v > 100 || a < 0 || a > 1) {\n            return false;\n        }\n\n        // Override current color and re-active color calculation\n        this._color = HSVaColor(h, s, v, a);\n\n        // Update slider and palette\n        const {hue, opacity, palette} = this._components;\n        hue.update((h / 360));\n        opacity.update(a);\n        palette.update(s / 100, 1 - (v / 100));\n\n        // Check if call is silent\n        if (!silent) {\n            this.applyColor();\n        }\n\n        // Update output if recalculation is enabled\n        if (recalc) {\n            this._updateOutput();\n        }\n\n        // Restore old state\n        this._recalc = recalc;\n        return true;\n    }\n\n    /**\n     * Tries to parse a string which represents a color.\n     * Examples: #fff\n     *           rgb 10 10 200\n     *           hsva 10 20 5 0.5\n     * @param string\n     * @param silent\n     */\n    setColor(string, silent = false) {\n\n        // Check if null\n        if (string === null) {\n            this._clearColor(silent);\n            return true;\n        }\n\n        const {values, type} = this._parseLocalColor(string);\n\n        // Check if color is ok\n        if (values) {\n\n            // Change selected color format\n            const utype = type.toUpperCase();\n            const {options} = this._root.interaction;\n            const target = options.find(el => el.getAttribute('data-type') === utype);\n\n            // Auto select only if not hidden\n            if (target && !target.hidden) {\n                for (const el of options) {\n                    el.classList[el === target ? 'add' : 'remove']('active');\n                }\n            }\n\n            // Update color (fires 'save' event if silent is 'false')\n            if (!this.setHSVA(...values, silent)) {\n                return false;\n            }\n\n            // Update representation (fires 'change' event)\n            return this.setColorRepresentation(utype);\n        }\n\n        return false;\n    }\n\n    /**\n     * Changes the color _representation.\n     * Allowed values are HEX, RGB, HSV, HSL and CMYK\n     * @param type\n     * @returns {boolean} if the selected type was valid.\n     */\n    setColorRepresentation(type) {\n\n        // Force uppercase to allow a case-sensitiv comparison\n        type = type.toUpperCase();\n\n        // Find button with given type and trigger click event\n        return !!this._root.interaction.options\n            .find(v => v.getAttribute('data-type').startsWith(type) && !v.click());\n    }\n\n    /**\n     * Returns the current color representaion. See setColorRepresentation\n     * @returns {*}\n     */\n    getColorRepresentation() {\n        return this._representation;\n    }\n\n    /**\n     * @returns HSVaColor Current HSVaColor object.\n     */\n    getColor() {\n        return this._color;\n    }\n\n    /**\n     * Returns the currently selected color.\n     * @returns {{a, toHSVA, toHEXA, s, v, h, clone, toCMYK, toHSLA, toRGBA}}\n     */\n    getSelectedColor() {\n        return this._lastColor;\n    }\n\n    /**\n     * @returns The root HTMLElement with all his components.\n     */\n    getRoot() {\n        return this._root;\n    }\n\n    /**\n     * Disable pickr\n     */\n    disable() {\n        this.hide();\n        this.options.disabled = true;\n        this._root.button.classList.add('disabled');\n        return this;\n    }\n\n    /**\n     * Enable pickr\n     */\n    enable() {\n        this.options.disabled = false;\n        this._root.button.classList.remove('disabled');\n        return this;\n    }\n}\n\nexport default Pickr;\n","import * as _ from './utils/utils';\n\nexport default instance => {\n\n    const {\n        components,\n        useAsButton,\n        inline,\n        appClass,\n        theme,\n        lockOpacity\n    } = instance.options;\n\n    // Utils\n    const hidden = con => con ? '' : 'style=\"display:none\" hidden';\n    const t = str => instance._t(str);\n\n    const root = _.createFromTemplate(`\n      <div :ref=\"root\" class=\"pickr\">\n\n        ${useAsButton ? '' : '<button type=\"button\" :ref=\"button\" class=\"pcr-button\"></button>'}\n\n        <div :ref=\"app\" class=\"pcr-app ${appClass || ''}\" data-theme=\"${theme}\" ${inline ? 'style=\"position: unset\"' : ''} aria-label=\"${t('ui:dialog', 'color picker dialog')}\" role=\"window\">\n          <div class=\"pcr-selection\" ${hidden(components.palette)}>\n            <div :obj=\"preview\" class=\"pcr-color-preview\" ${hidden(components.preview)}>\n              <button type=\"button\" :ref=\"lastColor\" class=\"pcr-last-color\" aria-label=\"${t('btn:last-color')}\"></button>\n              <div :ref=\"currentColor\" class=\"pcr-current-color\"></div>\n            </div>\n\n            <div :obj=\"palette\" class=\"pcr-color-palette\">\n              <div :ref=\"picker\" class=\"pcr-picker\"></div>\n              <div :ref=\"palette\" class=\"pcr-palette\" tabindex=\"0\" aria-label=\"${t('aria:palette')}\" role=\"listbox\"></div>\n            </div>\n\n            <div :obj=\"hue\" class=\"pcr-color-chooser\" ${hidden(components.hue)}>\n              <div :ref=\"picker\" class=\"pcr-picker\"></div>\n              <div :ref=\"slider\" class=\"pcr-hue pcr-slider\" tabindex=\"0\" aria-label=\"${t('aria:hue')}\" role=\"slider\"></div>\n            </div>\n\n            <div :obj=\"opacity\" class=\"pcr-color-opacity\" ${hidden(components.opacity)}>\n              <div :ref=\"picker\" class=\"pcr-picker\"></div>\n              <div :ref=\"slider\" class=\"pcr-opacity pcr-slider\" tabindex=\"0\" aria-label=\"${t('aria:opacity', 'opacity selection slider')}\" role=\"slider\"></div>\n            </div>\n          </div>\n\n          <div class=\"pcr-swatches ${components.palette ? '' : 'pcr-last'}\" :ref=\"swatches\"></div>\n\n          <div :obj=\"interaction\" class=\"pcr-interaction\" ${hidden(Object.keys(components.interaction).length)}>\n            <input :ref=\"result\" class=\"pcr-result\" type=\"text\" spellcheck=\"false\" ${hidden(components.interaction.input)} aria-label=\"${t('aria:input', 'color input field')}\">\n\n            <input :arr=\"options\" class=\"pcr-type\" data-type=\"HEXA\" value=\"${lockOpacity ? 'HEX' : 'HEXA'}\" type=\"button\" ${hidden(components.interaction.hex)}>\n            <input :arr=\"options\" class=\"pcr-type\" data-type=\"RGBA\" value=\"${lockOpacity ? 'RGB' : 'RGBA'}\" type=\"button\" ${hidden(components.interaction.rgba)}>\n            <input :arr=\"options\" class=\"pcr-type\" data-type=\"HSLA\" value=\"${lockOpacity ? 'HSL' : 'HSLA'}\" type=\"button\" ${hidden(components.interaction.hsla)}>\n            <input :arr=\"options\" class=\"pcr-type\" data-type=\"HSVA\" value=\"${lockOpacity ? 'HSV' : 'HSVA'}\" type=\"button\" ${hidden(components.interaction.hsva)}>\n            <input :arr=\"options\" class=\"pcr-type\" data-type=\"CMYK\" value=\"CMYK\" type=\"button\" ${hidden(components.interaction.cmyk)}>\n\n            <input :ref=\"save\" class=\"pcr-save\" value=\"${t('btn:save')}\" type=\"button\" ${hidden(components.interaction.save)} aria-label=\"${t('aria:btn:save')}\">\n            <input :ref=\"cancel\" class=\"pcr-cancel\" value=\"${t('btn:cancel')}\" type=\"button\" ${hidden(components.interaction.cancel)} aria-label=\"${t('aria:btn:cancel')}\">\n            <input :ref=\"clear\" class=\"pcr-clear\" value=\"${t('btn:clear')}\" type=\"button\" ${hidden(components.interaction.clear)} aria-label=\"${t('aria:btn:clear')}\">\n          </div>\n        </div>\n      </div>\n    `,instance.options.document);\n\n    const int = root.interaction;\n\n    // Select option which is not hidden\n    int.options.find(o => !o.hidden && !o.classList.add('active'));\n\n    // Append method to find currently active option\n    int.type = () => int.options.find(e => e.classList.contains('active'));\n    return root;\n}\n"],"sourceRoot":""}